[{"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Home.js":"1","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\About.js":"2","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Contact.js":"3","D:\\Study\\BloodBank_Management\\frontend\\src\\App.js":"4","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Header.js":"5","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Counter.js":"6","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Footer.js":"7","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Team.js":"8","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\AddDonor.js":"9","D:\\Study\\BloodBank_Management\\frontend\\src\\index.js":"10","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Call.js":"11","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Donors.js":"12","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\Login.js":"13","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\BloodRequest.js":"14","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Banner.js":"15","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\Search.js":"16","D:\\Study\\BloodBank_Management\\frontend\\src\\Router.js":"17","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\EditProfile.js":"18","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\Profile.js":"19"},{"size":1213,"mtime":1611677263440,"results":"20","hashOfConfig":"21"},{"size":2248,"mtime":1610727978168,"results":"22","hashOfConfig":"21"},{"size":8270,"mtime":1611645416817,"results":"23","hashOfConfig":"21"},{"size":525,"mtime":1611683377378,"results":"24","hashOfConfig":"21"},{"size":2472,"mtime":1610990698703,"results":"25","hashOfConfig":"21"},{"size":1252,"mtime":1610615403249,"results":"26","hashOfConfig":"21"},{"size":1733,"mtime":1610980532758,"results":"27","hashOfConfig":"21"},{"size":3819,"mtime":1610957698941,"results":"28","hashOfConfig":"21"},{"size":17868,"mtime":1611672688072,"results":"29","hashOfConfig":"21"},{"size":382,"mtime":1611512595564,"results":"30","hashOfConfig":"21"},{"size":843,"mtime":1610728199907,"results":"31","hashOfConfig":"21"},{"size":3905,"mtime":1611920900188,"results":"32","hashOfConfig":"21"},{"size":7282,"mtime":1611642722079,"results":"33","hashOfConfig":"21"},{"size":11634,"mtime":1611644772070,"results":"34","hashOfConfig":"21"},{"size":732,"mtime":1611921475405,"results":"35","hashOfConfig":"21"},{"size":9782,"mtime":1611642944416,"results":"36","hashOfConfig":"21"},{"size":1503,"mtime":1611815587877,"results":"37","hashOfConfig":"21"},{"size":877,"mtime":1611683288459,"results":"38","hashOfConfig":"21"},{"size":3845,"mtime":1611921233098,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"7oxamf",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Home.js",["91","92"],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\About.js",[],["93","94"],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Contact.js",["95","96"],"D:\\Study\\BloodBank_Management\\frontend\\src\\App.js",[],["97","98"],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Header.js",["99","100","101"],"import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n          isNavOpen: false\r\n        };\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n  render() {\r\n    return(\r\n        <div>\r\n            <header id=\"header\" className=\"fixed-top align-items-center\">\r\n                <Navbar dark expand=\"lg\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n\r\n                            <div className=\"container\">\r\n                                    <div className=\"header-container d-flex align-items-center\">\r\n                                    <div className=\"logo\">\r\n                                        <h1 className=\"text-light\"><a href=\"/\"><NavbarBrand className=\"mr-auto\" href=\"/\">BloodBank</NavbarBrand></a></h1>\r\n                                    </div>\r\n\r\n                                    <nav className=\"nav-menu d-none d-lg-block\" >\r\n                                        <ul>\r\n                                            <li><NavLink to=\"/home\">Home</NavLink></li>\r\n                                            <li><NavLink to=\"/addDonor\">Become a donor</NavLink></li>\r\n                                            <li><NavLink to=\"/donors\">Donors List</NavLink></li>\r\n                                            <li><NavLink to=\"/bloodRequest\">Send Blood Request</NavLink></li>\r\n                                            <li><NavLink to=\"/search\">Search Blood</NavLink></li>\r\n                                            <li><NavLink to=\"/contact\">Contact</NavLink></li>\r\n                                            <li><NavLink to=\"/team\">Team</NavLink></li>\r\n                                            <li  className=\"get-started\"><NavLink to=\"/login\">Login</NavLink></li>\r\n                                        </ul>\r\n                                    </nav>\r\n                                </div>\r\n                            </div>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </header>\r\n\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;",["102","103"],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Counter.js",[],["104","105"],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Footer.js",["106"],"import React, { Component } from 'react';\r\n\r\nclass Donors extends Component {  \r\n  render() {\r\n    return(\r\n        <div>\r\n             <footer id=\"footer\">\r\n                <div class=\"container d-md-flex py-4\">\r\n\r\n                    <div class=\"mr-md-auto text-center text-md-left\">\r\n                        <div class=\"copyright\">\r\n                        &copy; Copyright <strong><span>BloodBank</span></strong>. All Rights Reserved\r\n                        </div>\r\n                        <div class=\"credits\">\r\n                        \r\n                        Designed by <a href=\"\">Md.Kamrul Hasan</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"social-links text-center text-md-right pt-3 pt-md-0\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                    </div>\r\n                </footer>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Donors;","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Team.js",["107","108","109","110","111","112","113","114","115","116"],"import React, { Component } from 'react';\r\nimport Kamrul from '../images/kamrul.jpg'\r\nclass Team extends Component {\r\n    \r\n  render() {\r\n    return(\r\n        <div>\r\n            <section id=\"team\" className=\"team\">\r\n                    <div className=\"container\">\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"section-title\" data-aos=\"fade-right\">\r\n                                <h2>Team</h2>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-8\">\r\n                                <div className=\"row\">\r\n\r\n                                    <div className=\"col-lg-6\">\r\n                                        <div className=\"member\" data-aos=\"zoom-in\" data-aos-delay=\"100\">\r\n                                        <div className=\"pic\"><img src={Kamrul} className=\"img-fluid\"/></div>\r\n                                        <div className=\"member-info\">\r\n                                            <h4>Md.Kamrul Hasan</h4>\r\n                                            <span>Student</span>\r\n                                            <p>Computer Science and Engineering Discipline  Khulna University</p>\r\n                                            <div className=\"social\">\r\n                                                <a className=\"btn btn-social-icon btn-facebook\" href=\"\"><i className=\"fa fa-facebook\"></i></a>\r\n                                                <a className=\"btn btn-social-icon btn-linkedin\" href=\"\"><i className=\"fa fa-linkedin\"></i></a>\r\n                                                <a className=\"btn btn-social-icon btn-twitter\" href=\"\"><i className=\"fa fa-twitter\"></i></a>\r\n                                                <a className=\"btn btn-social-icon\" href=\"\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-6\">\r\n                                        <div className=\"member\" data-aos=\"zoom-in\" data-aos-delay=\"100\">\r\n                                            <div className=\"pic\"><img src={Kamrul} className=\"img-fluid\"/></div>\r\n                                            <div className=\"member-info\">\r\n                                                <h4>Md.Kamrul Hasan</h4>\r\n                                                <span>Student</span>\r\n                                                <p>Computer Science and Engineering Discipline  Khulna University</p>\r\n                                                <div className=\"social\">\r\n                                                    <a className=\"btn btn-social-icon btn-facebook\" href=\"\"><i className=\"fa fa-facebook\"></i></a>\r\n                                                    <a className=\"btn btn-social-icon btn-linkedin\" href=\"\"><i className=\"fa fa-linkedin\"></i></a>\r\n                                                    <a className=\"btn btn-social-icon btn-twitter\" href=\"\"><i className=\"fa fa-twitter\"></i></a>\r\n                                                    <a className=\"btn btn-social-icon\" href=\"\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </section>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Team;","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\AddDonor.js",["117","118","119","120","121","122","123","124","125"],"import React, {Component} from 'react';\r\n\r\nclass AddDonor extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name:'',\r\n            email:'',\r\n            blood:'',\r\n            weight:'',\r\n            address:'',\r\n            contact:'',\r\n            password:'',\r\n            cpassword:'',\r\n            touched: {\r\n                name: false,\r\n                email:false,\r\n                blood:false,\r\n                weight:false,\r\n                address:false,\r\n                contact:false,\r\n                password:false,\r\n                cpassword:false,\r\n            }\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(event){\r\n        const {name,email,contact,blood,weight,address,password,cpassword } = this.state\r\n        event.preventDefault()\r\n        console.log(this.state)\r\n        fetch('http://127.0.0.1:8000/api/addDonor',{\r\n            method:'post',\r\n            body:JSON.stringify(\r\n                this.state\r\n            ),\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            }\r\n        }).then(function(response){\r\n            response.json().then(function (resp) {\r\n                console.log(resp);\r\n                alert(\"Successfully Registered !!\");\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            // Computed property names\r\n            // keys of the objects are computed dynamically\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(name,email,contact,blood,weight,address,password,cpassword) {\r\n        const errors = {\r\n            name: '',email:'',contact:'',blood:'',weight:'',address:'',password:'',cpassword:''\r\n        };\r\n\r\n        if (this.state.touched.name && name.length < 3)\r\n            errors.name = 'First Name should be >= 3 characters';\r\n        else if (this.state.touched.name && name.length > 50)\r\n            errors.name = 'First Name should be <= 50 characters';\r\n\r\n        let pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if(this.state.touched.email && !pattern.test(email))\r\n            errors.email = 'Please enter valid email address';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.contact && !reg.test(contact))\r\n            errors.contact = 'Contact Number should contain only numbers';\r\n\r\n        if(this.state.touched.blood && !blood)\r\n            errors.blood = 'Blood group is required';\r\n        if(this.state.touched.weight && !weight)\r\n            errors.weight = 'Weight is required';\r\n        if(this.state.touched.address && !address)\r\n            errors.address = 'Address is required';\r\n        if(this.state.touched.password && !password)\r\n            errors.password = 'Password is required';\r\n        else if(this.state.touched.password && password.length < 8)\r\n            errors.password = 'Password must be 8 characters long';\r\n\r\n        if(this.state.touched.cpassword && !cpassword)\r\n            errors.cpassword = 'Confirm Password is required';\r\n        else if(this.state.touched.cpassword && cpassword.length < 8)\r\n            errors.cpassword = 'Confirm Password must be 8 characters long';\r\n        else if(this.state.touched.cpassword && password !== cpassword)\r\n            errors.cpassword = 'Confirm Password should be same as password';\r\n\r\n        console.log(errors);\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.name,this.state.email,this.state.contact,this.state.blood,\r\n            this.state.weight,this.state.address,this.state.password,this.state.cpassword);\r\n\r\n        return (\r\n            <div>\r\n                <section id=\"addDonor\" className=\"d-flex align-items-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\" data-aos=\"fade-right\">\r\n                                    <div className=\"section-title\">\r\n                                        <h2>Become a Donor</h2>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-8\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                    <form role=\"form\"\r\n                                          className=\"php-email-form mt-4\">\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticName\" className=\"col-sm-2 col-form-label\">Name</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"text\" name=\"name\" className=\"form-control\" id=\"name\"\r\n                                                       placeholder=\"Name\" data-rule=\"minlen:2\"\r\n                                                       data-msg=\"Please enter at least 2 chars\"\r\n                                                       value = {this.state.name}\r\n                                                       valid={errors.name === ''}\r\n                                                       invalid={errors.name !== ''}\r\n                                                       onBlur={this.handleBlur('name')}\r\n                                                       onChange={this.handleChange}\r\n                                                />\r\n                                                       <p\r\n                                                       style={{\r\n                                                           color:\"red\",\"padding-top\":\"10px\"\r\n                                                       }}>\r\n                                                       {errors.name} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">E-Mail Address</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\"\r\n                                                       placeholder=\"Email\" value = {this.state.email}\r\n                                                       valid={errors.email === ''}\r\n                                                       invalid={errors.email !== ''}\r\n                                                       onBlur={this.handleBlur('email')}\r\n                                                       onChange={this.handleChange}/>\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.email} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticContact\" className=\"col-sm-2 col-form-label\">Contact No</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"number\" name=\"contact\" className=\"form-control\" id=\"email\"\r\n                                                       placeholder=\"Contact No\"\r\n                                                       value = {this.state.contact}\r\n                                                       valid={errors.contact === ''}\r\n                                                       invalid={errors.contact !== ''}\r\n                                                       onBlur={this.handleBlur('contact')}\r\n                                                       onChange={this.handleChange}/>\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.contact} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticBlood\" className=\"col-sm-2 col-form-label\">Blood Group</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <select className=\"form-control\" name=\"blood\"\r\n                                                        value = {this.state.blood}\r\n                                                        valid={errors.blood === ''}\r\n                                                        invalid={errors.blood !== ''}\r\n                                                        onBlur={this.handleBlur('blood')}\r\n                                                        onChange={this.handleChange} >\r\n                                                    <option disabled>blood</option>\r\n                                                    <option>A+</option>\r\n                                                    <option>A-</option>\r\n                                                    <option>B+</option>\r\n                                                    <option>A-</option>\r\n                                                    <option>O+</option>\r\n                                                    <option>O-</option>\r\n                                                    <option>AB+</option>\r\n                                                    <option>AB-</option>\r\n                                                </select>\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.blood} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticWeight\" className=\"col-sm-2 col-form-label\">Weight</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"text\" name=\"weight\" className=\"form-control\" id=\"weight\"\r\n                                                       placeholder=\"Weight\"\r\n                                                       value = {this.state.weight}\r\n                                                       valid={errors.weight === ''}\r\n                                                       invalid={errors.weight !== ''}\r\n                                                       onBlur={this.handleBlur('weight')}\r\n                                                       onChange={this.handleChange}/>\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.weight} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticAddress\" className=\"col-sm-2 col-form-label\">Address</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"text\" name=\"address\" className=\"form-control\" id=\"address\"\r\n                                                       placeholder=\"Address\"\r\n                                                       value = {this.state.address}\r\n                                                       valid={errors.address === ''}\r\n                                                       invalid={errors.address !== ''}\r\n                                                       onBlur={this.handleBlur('address')}\r\n                                                       onChange={this.handleChange}/>\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.address} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticPassword\" className=\"col-sm-2 col-form-label\">Password</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"password\" name=\"password\" className=\"form-control\" id=\"password\"\r\n                                                       placeholder=\"Password\"\r\n                                                       value = {this.state.password}\r\n                                                       valid={errors.password === ''}\r\n                                                       invalid={errors.password !== ''}\r\n                                                       onBlur={this.handleBlur('password')}\r\n                                                       onChange={this.handleChange}/>\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.password} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticPassword\" className=\"col-sm-2 col-form-label\">Confirm Password</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"password\" name=\"cpassword\" className=\"form-control\" id=\"cpassword\"\r\n                                                       placeholder=\"Confirm Password\"\r\n                                                       value = {this.state.cpassword}\r\n                                                       valid={errors.cpassword === ''}\r\n                                                       invalid={errors.cpassword !== ''}\r\n                                                       onBlur={this.handleBlur('cpassword')}\r\n                                                       onChange={this.handleChange}\r\n                                                />\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.cpassword} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        {errors.name || errors.email || errors.address || errors.password || errors.cpassword ||\r\n                                            errors.contact || errors.weight || errors.blood\r\n                                            ?\r\n                                            <div className=\"text-center\">\r\n                                                <button  className=\"btn\" style={{\"background-color\":\"#00805d\",\"color\":\"white\" , \"opacity\":\"60%\"}} disabled={true}>Submit</button>\r\n                                            </div>\r\n                                            :\r\n                                            <div className=\"text-center\">\r\n                                                <button onClick={this.handleSubmit} className=\"btn\" style={{\"background-color\":\"#00805d\",\"color\":\"white\"}} type=\"submit\">Submit</button>\r\n                                            </div>\r\n                                        }\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddDonor;","D:\\Study\\BloodBank_Management\\frontend\\src\\index.js",[],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Call.js",["126"],"import React, {Component} from 'react';\r\n\r\nclass Call extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section id=\"cta\" className=\"cta\">\r\n                    <div className=\"container\">\r\n\r\n                        <div className=\"text-center\" data-aos=\"zoom-in\">\r\n                            <h3>Call To Action</h3>\r\n                            <p> Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                            <a className=\"cta-btn\" href=\"#\">Call To Action</a>\r\n                        </div>\r\n\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Call;","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Donors.js",["127"],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\Login.js",["128","129","130"],"import React, {Component} from 'react';\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            email:'',\r\n            password:'',\r\n            touched: {\r\n                email:false,\r\n                password:false,\r\n            }\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    handleSubmit(event){\r\n        const {email,password} = this.state\r\n        event.preventDefault()\r\n\r\n        console.log(this.state)\r\n        fetch('http://127.0.0.1:8000/api/login',{\r\n            method:'post',\r\n            body:JSON.stringify(\r\n                this.state\r\n            ),\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            }\r\n        }).then(function(response){\r\n            response.json().then(function (resp) {\r\n                console.log(resp);\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            // Computed property names\r\n            // keys of the objects are computed dynamically\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(email,password) {\r\n        const errors = {\r\n           email:'',password:''\r\n        };\r\n\r\n        let pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if(this.state.touched.email && !email)\r\n            errors.email = 'Email is required';\r\n        else if(this.state.touched.email && !pattern.test(email))\r\n            errors.email = 'Please enter valid email address';\r\n\r\n        if(this.state.touched.password && !password)\r\n            errors.password = 'Password is required';\r\n        else if(this.state.touched.password && password.length < 8)\r\n            errors.password = 'Password must be 8 characters long';\r\n\r\n        return errors;\r\n    }\r\n    render() {\r\n        const errors = this.validate(this.state.email,this.state.password);\r\n        return (\r\n            <div>\r\n                <section id=\"login\" className=\"d-flex align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\" data-aos=\"fade-right\">\r\n                                <div className=\"section-title\">\r\n                                    <h2>Login</h2>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-8\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                <form role=\"form\"\r\n                                      className=\"php-email-form mt-4\">\r\n                                    <div className=\"form-row\">\r\n                                        <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">E-Mail Address</label>\r\n                                        <div className=\"col-md-6 form-group\">\r\n                                            <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\"\r\n                                                   placeholder=\"Email\"\r\n                                                   value = {this.state.email}\r\n                                                   valid={errors.email === ''}\r\n                                                   invalid={errors.email !== ''}\r\n                                                   onBlur={this.handleBlur('email')}\r\n                                                   onChange={this.handleChange}\r\n                                            />\r\n                                            <p\r\n                                                style={{\r\n                                                    color:\"red\",\"padding-top\":\"10px\"\r\n                                                }}>\r\n                                                {errors.email} </p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-row\">\r\n                                        <label htmlFor=\"staticPassword\" className=\"col-sm-2 col-form-label\">Password</label>\r\n                                        <div className=\"col-md-6 form-group\">\r\n                                            <input type=\"password\" name=\"password\" className=\"form-control\" id=\"password\"\r\n                                                   placeholder=\"Password\"\r\n                                                   value = {this.state.password}\r\n                                                   valid={errors.password === ''}\r\n                                                   invalid={errors.password !== ''}\r\n                                                   onBlur={this.handleBlur('password')}\r\n                                                   onChange={this.handleChange}\r\n                                            />\r\n                                            <p\r\n                                                style={{\r\n                                                    color:\"red\",\"padding-top\":\"10px\"\r\n                                                }}>\r\n                                                {errors.password} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    {errors.email || errors.password\r\n\r\n                                        ?\r\n                                        <div className=\"text-center\">\r\n                                            <button className=\"btn\" style={{\r\n                                                \"background-color\": \"#00805d\",\r\n                                                \"color\": \"white\",\r\n                                                \"opacity\": \"60%\"\r\n                                            }} disabled={true}>Submit\r\n                                            </button>\r\n                                        </div>\r\n                                        :\r\n\r\n                                        <div className=\"text-center\">\r\n                                            <button onClick={this.handleSubmit} className=\"btn\"\r\n                                                    style={{\"background-color\": \"#00805d\", \"color\": \"white\"}}\r\n                                                    type=\"submit\">Login\r\n                                            </button>\r\n                                        </div>\r\n                                    }\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\BloodRequest.js",["131"],"import React, {Component} from 'react';\r\n\r\nclass BloodRequest extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            blood:'',\r\n            contact:'',\r\n            location:'',\r\n            patient:'',\r\n            diseases:'',\r\n            touched: {\r\n                blood:false,\r\n                location:false,\r\n                contact:false,\r\n                patient:false,\r\n                diseases:false,\r\n\r\n            }}\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n    handleSubmit(event){\r\n        const {blood,contact,location,patient,diseases} = this.state\r\n        event.preventDefault()\r\n        alert(` \r\n      --- Success ---\\n\r\n      ____Your Details____\\n  \r\n      contact : ${contact} \r\n      Address : ${location} \r\n      blood : ${blood} \r\n      Patient:${patient}\r\n      diseases:${diseases}\r\n    `)\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            // Computed property names\r\n            // keys of the objects are computed dynamically\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(contact,blood,location,patient,diseases) {\r\n        const errors = {\r\n            contact:'',blood:'', location:'', patient:'', diseases:'',\r\n        };\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.contact && !reg.test(contact))\r\n            errors.contact = 'Contact Number should contain only numbers';\r\n\r\n        if(this.state.touched.blood && !blood)\r\n            errors.blood = 'Blood group is required';\r\n\r\n        if(this.state.touched.location && !location)\r\n            errors.location = 'location is required';\r\n\r\n        if(this.state.touched.patient && !patient)\r\n            errors.patient = 'Patient Description is required';\r\n\r\n        if(this.state.touched.diseases && !diseases)\r\n            errors.diseases = 'Diseases Description is required';\r\n\r\n        console.log(errors);\r\n        return errors;\r\n    }\r\n\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.contact,this.state.blood,this.state.location,this.state.patient,this.state.diseases);\r\n        return (\r\n            <div>\r\n                <section id=\"bloodRequest\" className=\"d-flex align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\" data-aos=\"fade-right\">\r\n                                <div className=\"section-title\">\r\n                                    <h2>Blood Request</h2>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-8\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                <form  role=\"form\"\r\n                                      className=\"php-email-form mt-4\">\r\n                                    <div className=\"form-row\">\r\n                                        <label htmlFor=\"staticBlood\" className=\"col-sm-2 col-form-label\">Blood Group</label>\r\n                                        <div className=\"col-md-6 form-group\">\r\n                                            <select className=\"form-control\" name=\"blood\"\r\n                                                    value = {this.state.blood}\r\n                                                    onChange={this.handleChange}\r\n                                                    valid={errors.blood === ''}\r\n                                                    invalid={errors.blood !== ''}\r\n                                                    onBlur={this.handleBlur('blood')}\r\n                                            >\r\n                                                <option>-----------  Select Blood Group -------------</option>\r\n                                                <option>A+</option>\r\n                                                <option>A-</option>\r\n                                                <option>B+</option>\r\n                                                <option>A-</option>\r\n                                                <option>O+</option>\r\n                                                <option>O-</option>\r\n                                                <option>AB+</option>\r\n                                                <option>AB-</option>\r\n                                            </select>\r\n                                            <p\r\n                                                style={{\r\n                                                    color:\"red\",\"padding-top\":\"10px\"\r\n                                                }}>\r\n                                                {errors.blood} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <label htmlFor=\"staticContact\" className=\"col-sm-2 col-form-label\">Contact No</label>\r\n                                        <div className=\"col-md-6 form-group\">\r\n                                            <input type=\"number\" name=\"contact\" className=\"form-control\" id=\"email\"\r\n                                                   placeholder=\"Contact No\"\r\n                                                   value = {this.state.contact}\r\n                                                   valid={errors.contact === ''}\r\n                                                   invalid={errors.contact !== ''}\r\n                                                   onBlur={this.handleBlur('contact')}\r\n                                                   onChange={this.handleChange}\r\n                                            />\r\n                                            <p\r\n                                                style={{\r\n                                                    color:\"red\",\"padding-top\":\"10px\"\r\n                                                }}>\r\n                                                {errors.contact} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <label htmlFor=\"staticContact\" className=\"col-sm-2 col-form-label\">Location</label>\r\n                                        <div className=\"col-md-6 form-group\">\r\n                                            <input type=\"text\" name=\"location\" className=\"form-control\" id=\"location\"\r\n                                                   placeholder=\"Location\"\r\n                                                   value = {this.state.location}\r\n                                                   valid={errors.location === ''}\r\n                                                   invalid={errors.location !== ''}\r\n                                                   onBlur={this.handleBlur('location')}\r\n                                                   onChange={this.handleChange}\r\n                                            />\r\n                                            <p\r\n                                                style={{\r\n                                                    color:\"red\",\"padding-top\":\"10px\"\r\n                                                }}>\r\n                                                {errors.location} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <label htmlFor=\"staticPatient\" className=\"col-sm-2 col-form-label\">Patient Description</label>\r\n                                        <div className=\"col-md-6 form-group\">\r\n                                            <textarea className=\"form-control\" name=\"patient\" rows=\"3\" data-rule=\"required\" data-msg=\"Please write something for us\" placeholder=\"Patient Description\"\r\n                                                      value = {this.state.patient}\r\n                                                      valid={errors.patient === ''}\r\n                                                      invalid={errors.patient !== ''}\r\n                                                      onBlur={this.handleBlur('patient')}\r\n                                                      onChange={this.handleChange}\r\n                                            ></textarea>\r\n                                            <p\r\n                                                style={{\r\n                                                    color:\"red\",\"padding-top\":\"10px\"\r\n                                                }}>\r\n                                                {errors.patient} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <label htmlFor=\"staticDiseases\" className=\"col-sm-2 col-form-label\">Diseases Description</label>\r\n                                        <div className=\"col-md-6 form-group\">\r\n                                            <textarea className=\"form-control\" name=\"diseases\" rows=\"3\" data-rule=\"required\" data-msg=\"Please write something for us\" placeholder=\"Diseases Description\"\r\n                                                      value = {this.state.diseases}\r\n                                                      valid={errors.diseases === ''}\r\n                                                      invalid={errors.diseases !== ''}\r\n                                                      onBlur={this.handleBlur('diseases')}\r\n                                                      onChange={this.handleChange}\r\n                                            ></textarea>\r\n                                            <p\r\n                                                style={{\r\n                                                    color:\"red\",\"padding-top\":\"10px\"\r\n                                                }}>\r\n                                                {errors.diseases} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    { errors.location || errors.blood || errors.contact ||\r\n                                    errors.patient || errors.diseases\r\n                                        ?\r\n                                        <div className=\"text-center\">\r\n                                            <button  className=\"btn\" style={{\"background-color\":\"#00805d\",\"color\":\"white\" , \"opacity\":\"60%\"}} disabled={true}>Submit</button>\r\n                                        </div>\r\n                                        :\r\n                                        <div className=\"text-center\">\r\n                                            <button onClick={this.handleSubmit} className=\"btn\" style={{\"background-color\":\"#00805d\",\"color\":\"white\"}} type=\"submit\">Submit</button>\r\n                                        </div>\r\n                                    }\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BloodRequest;",["132","133"],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Banner.js",[],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\Search.js",["134"],"import React, {Component} from 'react';\r\n\r\nclass Search extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            blood:'',\r\n            location:'',\r\n            showBlood:false,\r\n            showLocation:false,\r\n            touched: {\r\n                blood:false,\r\n                location:false,\r\n\r\n            }\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    handleSubmit(event){\r\n        const {blood,location} = this.state\r\n        event.preventDefault()\r\n        alert(` \r\n      --- Success ---\\n\r\n      ____Your Details____\\n  \r\n      Blood : ${blood} \r\n      Location : ${location} \r\n\r\n    `)\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            // Computed property names\r\n            // keys of the objects are computed dynamically\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(blood,location) {\r\n        const errors = {\r\n            blood:'',location:''\r\n        };\r\n\r\n        if(this.state.touched.blood && !blood)\r\n            errors.blood = 'Blood group is required';\r\n        if(this.state.touched.location && !location)\r\n            errors.location = 'Location is required';\r\n\r\n        console.log(errors);\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.blood,this.state.location);\r\n        return (\r\n            <div>\r\n                <section id=\"search\" className=\"d-flex align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-2\" data-aos=\"fade-right\">\r\n                                <div className=\"section-title\">\r\n                                    <h2>Search</h2>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-5 form-check\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                <div className=\"section-title\" style={{\"padding-top\":\"10%\"}}>\r\n                                    <h4>Select for Search</h4>\r\n                                </div>\r\n                                <div className=\"form-row justify-content-center pt-4\">\r\n                                    <div className=\"col-md-6 form-group\">\r\n                                        <input type=\"checkbox\" name=\"location\" className=\"form-check-input\" id=\"flexCheckDefault\"\r\n                                               value=\"\" onClick={()=>{this.setState({showBlood:!this.state.showBlood})}}/>\r\n                                        <h5 className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                                            Search blood group\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row justify-content-center\">\r\n                                    <div className=\"col-md-6 form-group\">\r\n                                        <input type=\"checkbox\" name=\"location\" className=\"form-check-input\" id=\"flexCheckDefault\"\r\n                                               value=\"\" onClick={()=>{this.setState({showLocation:!this.state.showLocation})}}  />\r\n                                        <h5 className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                                            Search with Location\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"col-lg-5\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                <form role=\"form\"\r\n                                      className=\"php-email-form\" style={{\"padding-top\":\"20%\"}}>\r\n\r\n                                    {\r\n                                        this.state.showBlood ?\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">Blood Group</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <select className=\"form-control\" name=\"blood\"\r\n                                                        value = {this.state.blood}\r\n                                                        onChange={this.handleChange}\r\n                                                        valid={errors.blood === ''}\r\n                                                        invalid={errors.blood !== ''}\r\n                                                        onBlur={this.handleBlur('blood')}\r\n                                                >\r\n                                                    <option>----------Select----------</option>\r\n                                                    <option>A+</option>\r\n                                                    <option>A-</option>\r\n                                                    <option>B+</option>\r\n                                                    <option>A-</option>\r\n                                                    <option>O+</option>\r\n                                                    <option>O-</option>\r\n                                                    <option>AB+</option>\r\n                                                    <option>AB-</option>\r\n                                                </select>\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.blood} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        : null\r\n                                    }\r\n                                    {\r\n                                        this.state.showLocation ?\r\n                                    <div className=\"form-row mt-4\">\r\n                                        <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">Location</label>\r\n                                        <div className=\"col-md-6 form-group\">\r\n                                            <input type=\"text\" name=\"location\" className=\"form-control\" id=\"location\"\r\n                                                   placeholder=\"location\"\r\n                                                   value = {this.state.location}\r\n                                                   valid={errors.location === ''}\r\n                                                   invalid={errors.location !== ''}\r\n                                                   onBlur={this.handleBlur('location')}\r\n                                                   onChange={this.handleChange}\r\n                                            />\r\n                                            <p\r\n                                                style={{\r\n                                                    color:\"red\",\"padding-top\":\"10px\"\r\n                                                }}>\r\n                                                {errors.location} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                        :null\r\n                                    }\r\n                                    {\r\n                                        this.state.showBlood || this.state.showLocation ?\r\n                                            errors.blood || errors.location\r\n                                                ?\r\n                                                <div className=\"text-center\">\r\n                                                    <button className=\"btn\" style={{\r\n                                                        \"background-color\": \"#00805d\",\r\n                                                        \"color\": \"white\",\r\n                                                        \"opacity\": \"60%\"\r\n                                                    }} disabled={true}>Submit\r\n                                                    </button>\r\n                                                </div>\r\n                                                :\r\n                                                <div className=\"text-center\">\r\n                                                    <button onClick={this.handleSubmit} className=\"btn\" style={{\"background-color\":\"#00805d\",\"color\":\"white\"}} type=\"submit\">Search</button>\r\n                                                </div>\r\n\r\n                                            :null\r\n                                    }\r\n                                </form>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-2\" data-aos=\"fade-right\">\r\n                                <div className=\"section-title\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","D:\\Study\\BloodBank_Management\\frontend\\src\\Router.js",[],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\EditProfile.js",[],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\Profile.js",["135"],{"ruleId":"136","severity":1,"message":"137","line":8,"column":8,"nodeType":"138","messageId":"139","endLine":8,"endColumn":14},{"ruleId":"136","severity":1,"message":"140","line":9,"column":8,"nodeType":"138","messageId":"139","endLine":9,"endColumn":14},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":82,"column":29,"nodeType":"147","endLine":83,"endColumn":69},{"ruleId":"148","severity":1,"message":"149","line":106,"column":29,"nodeType":"147","endLine":106,"endColumn":80},{"ruleId":"141","replacedBy":"150"},{"ruleId":"143","replacedBy":"151"},{"ruleId":"136","severity":1,"message":"152","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":13},{"ruleId":"136","severity":1,"message":"153","line":2,"column":61,"nodeType":"138","messageId":"139","endLine":2,"endColumn":68},{"ruleId":"136","severity":1,"message":"154","line":2,"column":70,"nodeType":"138","messageId":"139","endLine":2,"endColumn":79},{"ruleId":"141","replacedBy":"155"},{"ruleId":"143","replacedBy":"156"},{"ruleId":"141","replacedBy":"157"},{"ruleId":"143","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":16,"column":37,"nodeType":"147","endLine":16,"endColumn":48},{"ruleId":"161","severity":1,"message":"162","line":22,"column":62,"nodeType":"147","endLine":22,"endColumn":103},{"ruleId":"159","severity":1,"message":"160","line":28,"column":49,"nodeType":"147","endLine":28,"endColumn":105},{"ruleId":"159","severity":1,"message":"160","line":29,"column":49,"nodeType":"147","endLine":29,"endColumn":105},{"ruleId":"159","severity":1,"message":"160","line":30,"column":49,"nodeType":"147","endLine":30,"endColumn":104},{"ruleId":"159","severity":1,"message":"160","line":31,"column":49,"nodeType":"147","endLine":31,"endColumn":92},{"ruleId":"161","severity":1,"message":"162","line":38,"column":66,"nodeType":"147","endLine":38,"endColumn":107},{"ruleId":"159","severity":1,"message":"160","line":44,"column":53,"nodeType":"147","endLine":44,"endColumn":109},{"ruleId":"159","severity":1,"message":"160","line":45,"column":53,"nodeType":"147","endLine":45,"endColumn":109},{"ruleId":"159","severity":1,"message":"160","line":46,"column":53,"nodeType":"147","endLine":46,"endColumn":108},{"ruleId":"159","severity":1,"message":"160","line":47,"column":53,"nodeType":"147","endLine":47,"endColumn":96},{"ruleId":"136","severity":1,"message":"163","line":33,"column":16,"nodeType":"138","messageId":"139","endLine":33,"endColumn":20},{"ruleId":"136","severity":1,"message":"164","line":33,"column":21,"nodeType":"138","messageId":"139","endLine":33,"endColumn":26},{"ruleId":"136","severity":1,"message":"165","line":33,"column":27,"nodeType":"138","messageId":"139","endLine":33,"endColumn":34},{"ruleId":"136","severity":1,"message":"166","line":33,"column":35,"nodeType":"138","messageId":"139","endLine":33,"endColumn":40},{"ruleId":"136","severity":1,"message":"167","line":33,"column":41,"nodeType":"138","messageId":"139","endLine":33,"endColumn":47},{"ruleId":"136","severity":1,"message":"168","line":33,"column":48,"nodeType":"138","messageId":"139","endLine":33,"endColumn":55},{"ruleId":"136","severity":1,"message":"169","line":33,"column":56,"nodeType":"138","messageId":"139","endLine":33,"endColumn":64},{"ruleId":"136","severity":1,"message":"170","line":33,"column":65,"nodeType":"138","messageId":"139","endLine":33,"endColumn":74},{"ruleId":"148","severity":1,"message":"149","line":123,"column":37,"nodeType":"147","endLine":124,"endColumn":75},{"ruleId":"159","severity":1,"message":"160","line":13,"column":29,"nodeType":"147","endLine":13,"endColumn":61},{"ruleId":"159","severity":1,"message":"171","line":47,"column":27,"nodeType":"147","endLine":47,"endColumn":30},{"ruleId":"136","severity":1,"message":"164","line":20,"column":16,"nodeType":"138","messageId":"139","endLine":20,"endColumn":21},{"ruleId":"136","severity":1,"message":"169","line":20,"column":22,"nodeType":"138","messageId":"139","endLine":20,"endColumn":30},{"ruleId":"148","severity":1,"message":"149","line":86,"column":33,"nodeType":"147","endLine":87,"endColumn":71},{"ruleId":"148","severity":1,"message":"149","line":93,"column":33,"nodeType":"147","endLine":94,"endColumn":71},{"ruleId":"141","replacedBy":"172"},{"ruleId":"143","replacedBy":"173"},{"ruleId":"148","severity":1,"message":"149","line":101,"column":33,"nodeType":"147","endLine":102,"endColumn":96},{"ruleId":"174","severity":1,"message":"175","line":26,"column":28,"nodeType":"176","messageId":"177","endLine":26,"endColumn":30},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","no-native-reassign",["178"],"no-negated-in-lhs",["179"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.",["178"],["179"],"'Nav' is defined but never used.","'NavItem' is defined but never used.","'Jumbotron' is defined but never used.",["178"],["179"],["178"],["179"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'contact' is assigned a value but never used.","'blood' is assigned a value but never used.","'weight' is assigned a value but never used.","'address' is assigned a value but never used.","'password' is assigned a value but never used.","'cpassword' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["178"],["179"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]