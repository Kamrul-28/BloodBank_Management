[{"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\admin\\dashboard\\dashboard.js":"1","D:\\Study\\BloodBank_Management\\frontend\\src\\index.js":"2","D:\\Study\\BloodBank_Management\\frontend\\src\\Router.js":"3","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Donors.js":"4","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Home.js":"5","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Team.js":"6","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\AddDonor.js":"7","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\EditProfile.js":"8","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\Profile.js":"9","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\About.js":"10","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Counter.js":"11","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Header.js":"12","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\admin\\sidebar.js":"13","D:\\Study\\BloodBank_Management\\frontend\\src\\App.js":"14","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\Login.js":"15","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Banner.js":"16","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Contact.js":"17","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\BloodRequest.js":"18","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\Search.js":"19","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Main.js":"20"},{"size":7078,"mtime":1613894890617,"results":"21","hashOfConfig":"22"},{"size":381,"mtime":1613899055867,"results":"23","hashOfConfig":"24"},{"size":1638,"mtime":1613899341839,"results":"25","hashOfConfig":"22"},{"size":4250,"mtime":1613878808708,"results":"26","hashOfConfig":"24"},{"size":1271,"mtime":1621932675147,"results":"27","hashOfConfig":"24"},{"size":3933,"mtime":1613878947437,"results":"28","hashOfConfig":"22"},{"size":17988,"mtime":1613878716179,"results":"29","hashOfConfig":"24"},{"size":877,"mtime":1611683288459,"results":"30","hashOfConfig":"22"},{"size":3845,"mtime":1611921233098,"results":"31","hashOfConfig":"24"},{"size":2248,"mtime":1610727978168,"results":"32","hashOfConfig":"24"},{"size":1252,"mtime":1610615403249,"results":"33","hashOfConfig":"24"},{"size":2472,"mtime":1610990698703,"results":"34","hashOfConfig":"22"},{"size":7145,"mtime":1613895253150,"results":"35","hashOfConfig":"22"},{"size":393,"mtime":1613878569610,"results":"36","hashOfConfig":"24"},{"size":7404,"mtime":1613879083277,"results":"37","hashOfConfig":"22"},{"size":732,"mtime":1611921475405,"results":"38","hashOfConfig":"24"},{"size":8382,"mtime":1613878997173,"results":"39","hashOfConfig":"24"},{"size":11756,"mtime":1613878864510,"results":"40","hashOfConfig":"24"},{"size":9904,"mtime":1613879083103,"results":"41","hashOfConfig":"24"},{"size":253,"mtime":1613878427906,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"qw2krb",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"7oxamf",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\admin\\dashboard\\dashboard.js",["91","92","93","94"],"D:\\Study\\BloodBank_Management\\frontend\\src\\index.js",[],["95","96"],"D:\\Study\\BloodBank_Management\\frontend\\src\\Router.js",[],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Donors.js",["97","98"],"import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport Footer from './Footer';\r\n\r\nclass Donors extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            items:[],\r\n            filtered:[],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch('http://127.0.0.1:8000/api/donors')\r\n            .then(res => res.json())\r\n            .then(json=>{\r\n                this.setState({\r\n                        items:json\r\n                    }\r\n                )\r\n            })\r\n\r\n    }\r\n    getKeyword = (event) => {\r\n        //console.log(event.target.value)\r\n        let keyword = event.target.value;\r\n        let upKeyword=keyword.toUpperCase();\r\n        console.log('')\r\n         let filtered = this.state.items.filter((item)=>{\r\n             return item.blood.indexOf(upKeyword) > -1\r\n         });\r\n        this.setState({\r\n            filtered\r\n        })\r\n        // console.log(filtered)\r\n    }\r\n\r\n  render() {\r\n      let itemsFiltered = this.state.filtered;\r\n      let itemsWhole = this.state.items;\r\n      const newItems = itemsFiltered.length === 0 ? itemsWhole : itemsFiltered;\r\n\r\n      const card= newItems.map((item, index) => (\r\n          <div key={index} className=\"col-md-4 d-flex align-items-stretch\">\r\n              <div  className=\"card mb-4\">\r\n                  <div className=\"card-header\"\r\n                       style={{\"background-color\":\"#fff\"}}>\r\n                      <h3><a>Blood Group :<span style={{\"color\":\"red\"}}> {item.blood}</span></a></h3>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                      <h5>Name : {item.name}</h5>\r\n                      <h5>Address : {item.address}</h5>\r\n                      <h5>Contact : {item.contact}</h5>\r\n                      <h5>Weight : {item.weight}</h5>\r\n                      {item.is_available==true\r\n                          ?\r\n                          <h5>Status : <span className=\"text-success\">Available</span></h5>\r\n                          :\r\n                          <h5>Status : <span className=\"text-danger\">Not Available</span></h5>\r\n                      }\r\n\r\n                      <div className=\"text-center\">\r\n                          <Link to={{\r\n                              pathname: '/profile',\r\n                              id:item.id\r\n                          }}\r\n\r\n                          ><button className=\"btn\"\r\n                                     style={{\"background-color\":\"#00805d\",\r\n                                         \"color\":\"white\" ,\r\n                                         \"float\":\"right\",\r\n                                         \"margin-top\":\"20px\"\r\n                                     }}\r\n                                     type=\"submit\">View Profile</button>\r\n                          </Link>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          ))\r\n\r\n    return(\r\n        <div>\r\n            <Header />\r\n                <section id=\"services\" className=\"services section-bg\">\r\n                    <div className=\"container\">\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3\">\r\n                                <div className=\"section-title\" data-aos=\"fade-right\">\r\n                                     <h2>Donors</h2>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-3\">\r\n\r\n                            </div>\r\n                            <div className=\"col-lg-4 mr-auto\">\r\n                                <div className=\"section-title\" data-aos=\"fade-right\">\r\n                                    <input name=\"blood\" onChange={this.getKeyword} className=\"form-control\" type=\"text\" placeholder=\"Enter Blood Group\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {card}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            <Footer />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Donors;",["99","100"],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Home.js",[],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Team.js",["101","102","103","104","105","106","107","108","109","110"],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\AddDonor.js",["111","112","113","114","115","116","117","118","119"],"import React, {Component} from 'react';\r\nimport Footer from '../Footer';\r\nimport Header from '../Header';\r\nclass AddDonor extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name:'',\r\n            email:'',\r\n            blood:'',\r\n            weight:'',\r\n            address:'',\r\n            contact:'',\r\n            password:'',\r\n            cpassword:'',\r\n            touched: {\r\n                name: false,\r\n                email:false,\r\n                blood:false,\r\n                weight:false,\r\n                address:false,\r\n                contact:false,\r\n                password:false,\r\n                cpassword:false,\r\n            }\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(event){\r\n        const {name,email,contact,blood,weight,address,password,cpassword } = this.state\r\n        event.preventDefault()\r\n        console.log(this.state)\r\n        fetch('http://127.0.0.1:8000/api/addDonor',{\r\n            method:'post',\r\n            body:JSON.stringify(\r\n                this.state\r\n            ),\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            }\r\n        }).then(function(response){\r\n            response.json().then(function (resp) {\r\n                console.log(resp);\r\n                alert(\"Successfully Registered !!\");\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            // Computed property names\r\n            // keys of the objects are computed dynamically\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(name,email,contact,blood,weight,address,password,cpassword) {\r\n        const errors = {\r\n            name: '',email:'',contact:'',blood:'',weight:'',address:'',password:'',cpassword:''\r\n        };\r\n\r\n        if (this.state.touched.name && name.length < 3)\r\n            errors.name = 'First Name should be >= 3 characters';\r\n        else if (this.state.touched.name && name.length > 50)\r\n            errors.name = 'First Name should be <= 50 characters';\r\n\r\n        let pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if(this.state.touched.email && !pattern.test(email))\r\n            errors.email = 'Please enter valid email address';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.contact && !reg.test(contact))\r\n            errors.contact = 'Contact Number should contain only numbers';\r\n\r\n        if(this.state.touched.blood && !blood)\r\n            errors.blood = 'Blood group is required';\r\n        if(this.state.touched.weight && !weight)\r\n            errors.weight = 'Weight is required';\r\n        if(this.state.touched.address && !address)\r\n            errors.address = 'Address is required';\r\n        if(this.state.touched.password && !password)\r\n            errors.password = 'Password is required';\r\n        else if(this.state.touched.password && password.length < 8)\r\n            errors.password = 'Password must be 8 characters long';\r\n\r\n        if(this.state.touched.cpassword && !cpassword)\r\n            errors.cpassword = 'Confirm Password is required';\r\n        else if(this.state.touched.cpassword && cpassword.length < 8)\r\n            errors.cpassword = 'Confirm Password must be 8 characters long';\r\n        else if(this.state.touched.cpassword && password !== cpassword)\r\n            errors.cpassword = 'Confirm Password should be same as password';\r\n\r\n        console.log(errors);\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.name,this.state.email,this.state.contact,this.state.blood,\r\n            this.state.weight,this.state.address,this.state.password,this.state.cpassword);\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <section id=\"addDonor\" className=\"d-flex align-items-center\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\" data-aos=\"fade-right\">\r\n                                    <div className=\"section-title\">\r\n                                        <h2>Become a Donor</h2>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-8\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                    <form role=\"form\"\r\n                                          className=\"php-email-form mt-4\">\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticName\" className=\"col-sm-2 col-form-label\">Name</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"text\" name=\"name\" className=\"form-control\" id=\"name\"\r\n                                                       placeholder=\"Name\" data-rule=\"minlen:2\"\r\n                                                       data-msg=\"Please enter at least 2 chars\"\r\n                                                       value = {this.state.name}\r\n                                                       valid={errors.name === ''}\r\n                                                       invalid={errors.name !== ''}\r\n                                                       onBlur={this.handleBlur('name')}\r\n                                                       onChange={this.handleChange}\r\n                                                />\r\n                                                       <p\r\n                                                       style={{\r\n                                                           color:\"red\",\"padding-top\":\"10px\"\r\n                                                       }}>\r\n                                                       {errors.name} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">E-Mail Address</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\"\r\n                                                       placeholder=\"Email\" value = {this.state.email}\r\n                                                       valid={errors.email === ''}\r\n                                                       invalid={errors.email !== ''}\r\n                                                       onBlur={this.handleBlur('email')}\r\n                                                       onChange={this.handleChange}/>\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.email} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticContact\" className=\"col-sm-2 col-form-label\">Contact No</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"number\" name=\"contact\" className=\"form-control\" id=\"email\"\r\n                                                       placeholder=\"Contact No\"\r\n                                                       value = {this.state.contact}\r\n                                                       valid={errors.contact === ''}\r\n                                                       invalid={errors.contact !== ''}\r\n                                                       onBlur={this.handleBlur('contact')}\r\n                                                       onChange={this.handleChange}/>\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.contact} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticBlood\" className=\"col-sm-2 col-form-label\">Blood Group</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <select className=\"form-control\" name=\"blood\"\r\n                                                        value = {this.state.blood}\r\n                                                        valid={errors.blood === ''}\r\n                                                        invalid={errors.blood !== ''}\r\n                                                        onBlur={this.handleBlur('blood')}\r\n                                                        onChange={this.handleChange} >\r\n                                                    <option disabled>blood</option>\r\n                                                    <option>A+</option>\r\n                                                    <option>A-</option>\r\n                                                    <option>B+</option>\r\n                                                    <option>A-</option>\r\n                                                    <option>O+</option>\r\n                                                    <option>O-</option>\r\n                                                    <option>AB+</option>\r\n                                                    <option>AB-</option>\r\n                                                </select>\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.blood} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticWeight\" className=\"col-sm-2 col-form-label\">Weight</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"text\" name=\"weight\" className=\"form-control\" id=\"weight\"\r\n                                                       placeholder=\"Weight\"\r\n                                                       value = {this.state.weight}\r\n                                                       valid={errors.weight === ''}\r\n                                                       invalid={errors.weight !== ''}\r\n                                                       onBlur={this.handleBlur('weight')}\r\n                                                       onChange={this.handleChange}/>\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.weight} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticAddress\" className=\"col-sm-2 col-form-label\">Address</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"text\" name=\"address\" className=\"form-control\" id=\"address\"\r\n                                                       placeholder=\"Address\"\r\n                                                       value = {this.state.address}\r\n                                                       valid={errors.address === ''}\r\n                                                       invalid={errors.address !== ''}\r\n                                                       onBlur={this.handleBlur('address')}\r\n                                                       onChange={this.handleChange}/>\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.address} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticPassword\" className=\"col-sm-2 col-form-label\">Password</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"password\" name=\"password\" className=\"form-control\" id=\"password\"\r\n                                                       placeholder=\"Password\"\r\n                                                       value = {this.state.password}\r\n                                                       valid={errors.password === ''}\r\n                                                       invalid={errors.password !== ''}\r\n                                                       onBlur={this.handleBlur('password')}\r\n                                                       onChange={this.handleChange}/>\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.password} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <label htmlFor=\"staticPassword\" className=\"col-sm-2 col-form-label\">Confirm Password</label>\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <input type=\"password\" name=\"cpassword\" className=\"form-control\" id=\"cpassword\"\r\n                                                       placeholder=\"Confirm Password\"\r\n                                                       value = {this.state.cpassword}\r\n                                                       valid={errors.cpassword === ''}\r\n                                                       invalid={errors.cpassword !== ''}\r\n                                                       onBlur={this.handleBlur('cpassword')}\r\n                                                       onChange={this.handleChange}\r\n                                                />\r\n                                                <p\r\n                                                    style={{\r\n                                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                                    }}>\r\n                                                    {errors.cpassword} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        {errors.name || errors.email || errors.address || errors.password || errors.cpassword ||\r\n                                            errors.contact || errors.weight || errors.blood\r\n                                            ?\r\n                                            <div className=\"text-center\">\r\n                                                <button  className=\"btn\" style={{\"background-color\":\"#00805d\",\"color\":\"white\" , \"opacity\":\"60%\"}} disabled={true}>Submit</button>\r\n                                            </div>\r\n                                            :\r\n                                            <div className=\"text-center\">\r\n                                                <button onClick={this.handleSubmit} className=\"btn\" style={{\"background-color\":\"#00805d\",\"color\":\"white\"}} type=\"submit\">Submit</button>\r\n                                            </div>\r\n                                        }\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddDonor;","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\EditProfile.js",[],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\Profile.js",["120"],"import React, {Component} from 'react';\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            items:[]\r\n        }\r\n        console.log(this.props.location.id);\r\n    }\r\n   componentDidMount() {\r\n       fetch('http://127.0.0.1:8000/api/donors')\r\n           .then(res => res.json())\r\n           .then(json=>{\r\n               this.setState({\r\n                       items:json,\r\n                       filtered:[],\r\n                   }\r\n               )\r\n           })\r\n    }\r\n\r\n    render() {\r\n        const keyword =this.props.location.id\r\n        let filtered = this.state.items.filter((item)=>{\r\n            return item.id == keyword;\r\n        });\r\n        const profile= filtered.map((item, index) => (\r\n            <div key={index} className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                            <div className=\"section-title\" data-aos=\"fade-right\">\r\n                                <h2 style={{\"float\":\"left\"}}>{item.name}</h2>\r\n                                <button className=\"btn\"\r\n                                        style={{\"background-color\":\"#00805d\",\r\n                                            \"color\":\"white\" ,\r\n                                            \"float\":\"right\",\r\n                                            \"margin-top\":\"20px\"\r\n                                        }}\r\n                                        type=\"submit\">Edit Profile</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <table className=\"table align-middle\">\r\n                                <thead>\r\n                                <tr className=\"text-danger\">\r\n                                    <th scope=\"col\">Blood Group</th>\r\n                                    <td>{item.blood}</td>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <th scope=\"col\">Address</th>\r\n                                    <td>{item.address}</td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <th scope=\"col\">Contact No</th>\r\n                                    <td>{item.contact}</td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <th scope=\"col\">Weight</th>\r\n                                    <td>{item.weight}</td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <th scope=\"col\">Height</th>\r\n                                    <td>{item.height}</td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <th scope=\"col\">Gender</th>\r\n                                    <td>{item.gender}</td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <th scope=\"col\">Date_of_birth</th>\r\n                                    <td>{item.date_of_birth}</td>\r\n\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n            </div>\r\n        ))\r\n\r\n        return (\r\n            <div>\r\n                {console.log(filtered)}\r\n                <section id=\"services\" className=\"services section-bg\">\r\n                    {profile}\r\n                </section>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\About.js",[],["121","122"],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Counter.js",[],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Header.js",["123","124","125"],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\admin\\sidebar.js",["126","127","128"],"D:\\Study\\BloodBank_Management\\frontend\\src\\App.js",[],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\Login.js",["129","130","131"],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Banner.js",[],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Contact.js",["132","133"],"import React, { Component } from 'react';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name:'',\r\n            contact:'',\r\n            message:'',\r\n            touched: {\r\n                name:false,\r\n                message:false,\r\n                contact:false,\r\n\r\n            }\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n    handleSubmit(event){\r\n        const {name,contact,message} = this.state\r\n        event.preventDefault()\r\n        alert(` \r\n      --- Success ---\\n\r\n      ____Your Details____\\n  \r\n      Name : ${name} \r\n      contact : ${contact} \r\n      Address : ${message} \r\n\r\n    `)\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            // Computed property names\r\n            // keys of the objects are computed dynamically\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(contact,name,message) {\r\n        const errors = {\r\n            contact:'',name:'', message:''\r\n        };\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.contact && !reg.test(contact))\r\n            errors.contact = 'Contact Number should contain only numbers';\r\n\r\n        if(this.state.touched.message && !message)\r\n            errors.message = 'Message is required';\r\n\r\n        if(this.state.touched.name && !name)\r\n            errors.name = 'Name is required';\r\n\r\n\r\n        console.log(errors);\r\n        return errors;\r\n    }\r\n\r\n  render() {\r\n      const errors = this.validate(this.state.contact,this.state.name,this.state.message);\r\n    return(\r\n        <div>\r\n            <Header />\r\n            <section id=\"contact\" className=\"contact\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-lg-4\" data-aos=\"fade-right\">\r\n                            <div className=\"section-title\">\r\n                            <h2>Contact</h2>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-8\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                            <iframe style={{border:0 , width: \"100%\",height: \"270\"}} src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3678.0070168755124!2d89.53173441491512!3d22.80220388506517!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x39ff85490c50d28f%3A0xadae6f7b93b7069a!2sKhulna%20University!5e0!3m2!1sen!2sbd!4v1610955053204!5m2!1sen!2sbd\"\r\n                                    frameborder=\"0\" allowfullscreen></iframe>\r\n                            <div className=\"info mt-4\">\r\n                            <i className=\"fa fa-map-marker\"></i>\r\n                            <h4>Location:</h4>\r\n                            <p>Khulna University , Sher-E-Bangla Rd, Khulna 9208</p>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-lg-6 mt-4\">\r\n                                <div className=\"info\">\r\n                                    <i className=\"fa fa-envelope-o\"></i>\r\n                                <h4>Email:</h4>\r\n                                <p>kamrul1728@cseku.ac.bd</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6\">\r\n                                <div className=\"info w-100 mt-4\">\r\n                                <i className=\"fa fa-phone\"></i>\r\n                                <h4>Call:</h4>\r\n                                <p>+88 01516705104</p>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n\r\n                            <form  role=\"form\" className=\"php-email-form mt-4\">\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-md-6 form-group\">\r\n                                <input type=\"text\" name=\"name\" className=\"form-control\" id=\"name\"\r\n                                       placeholder=\"Your Name\"\r\n                                       value = {this.state.name}\r\n                                       valid={errors.name === ''}\r\n                                       invalid={errors.name !== ''}\r\n                                       onBlur={this.handleBlur('name')}\r\n                                       onChange={this.handleChange}\r\n                                />\r\n                                    <p\r\n                                        style={{\r\n                                            color:\"red\",\"padding-top\":\"10px\"\r\n                                        }}>\r\n                                        {errors.name} </p>\r\n                                <div className=\"validate\"></div>\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group\">\r\n                                <input type=\"number\" className=\"form-control\" name=\"contact\" id=\"email\" placeholder=\"Your Contact No\"\r\n                                       value = {this.state.contact}\r\n                                       valid={errors.contact === ''}\r\n                                       invalid={errors.contact !== ''}\r\n                                       onBlur={this.handleBlur('contact')}\r\n                                       onChange={this.handleChange}\r\n                                />\r\n                                    <p\r\n                                        style={{\r\n                                            color:\"red\",\"padding-top\":\"10px\"\r\n                                        }}>\r\n                                        {errors.contact} </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea className=\"form-control\" name=\"message\" rows=\"5\" data-rule=\"required\" data-msg=\"Please write something for us\" placeholder=\"Message\"\r\n                                          value = {this.state.message}\r\n                                          valid={errors.message === ''}\r\n                                          invalid={errors.message !== ''}\r\n                                          onBlur={this.handleBlur('message')}\r\n                                          onChange={this.handleChange}\r\n                                ></textarea>\r\n                                <p\r\n                                    style={{\r\n                                        color:\"red\",\"padding-top\":\"10px\"\r\n                                    }}>\r\n                                    {errors.message} </p>\r\n                                <div className=\"validate\"></div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <div className=\"loading\">Loading</div>\r\n                                <div className=\"error-message\"></div>\r\n                                <div className=\"sent-message\">Your message has been sent. Thank you!</div>\r\n                            </div>\r\n                                {errors.contact || errors.message || errors.name\r\n                                    ?\r\n                                    <div className=\"text-center\">\r\n                                        <button style={{\"opacity\":\"60%\"}} type=\"submit\" disabled={true}>Send Message</button>\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"text-center\">\r\n                                        <button type=\"submit\" onClick={this.handleSubmit}>Send Message</button>\r\n                                    </div>\r\n                                }\r\n                            </form>\r\n                        </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </section>\r\n            <Footer />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\BloodRequest.js",["134"],"import React, {Component} from 'react';\r\nimport Footer from '../Footer';\r\nimport Header from '../Header';\r\n\r\nclass BloodRequest extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            blood:'',\r\n            contact:'',\r\n            location:'',\r\n            patient:'',\r\n            diseases:'',\r\n            touched: {\r\n                blood:false,\r\n                location:false,\r\n                contact:false,\r\n                patient:false,\r\n                diseases:false,\r\n\r\n            }}\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n    handleSubmit(event){\r\n        const {blood,contact,location,patient,diseases} = this.state\r\n        event.preventDefault()\r\n        alert(` \r\n      --- Success ---\\n\r\n      ____Your Details____\\n  \r\n      contact : ${contact} \r\n      Address : ${location} \r\n      blood : ${blood} \r\n      Patient:${patient}\r\n      diseases:${diseases}\r\n    `)\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            // Computed property names\r\n            // keys of the objects are computed dynamically\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(contact,blood,location,patient,diseases) {\r\n        const errors = {\r\n            contact:'',blood:'', location:'', patient:'', diseases:'',\r\n        };\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.contact && !reg.test(contact))\r\n            errors.contact = 'Contact Number should contain only numbers';\r\n\r\n        if(this.state.touched.blood && !blood)\r\n            errors.blood = 'Blood group is required';\r\n\r\n        if(this.state.touched.location && !location)\r\n            errors.location = 'location is required';\r\n\r\n        if(this.state.touched.patient && !patient)\r\n            errors.patient = 'Patient Description is required';\r\n\r\n        if(this.state.touched.diseases && !diseases)\r\n            errors.diseases = 'Diseases Description is required';\r\n\r\n        console.log(errors);\r\n        return errors;\r\n    }\r\n\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.contact,this.state.blood,this.state.location,this.state.patient,this.state.diseases);\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <section id=\"bloodRequest\" className=\"d-flex align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\" data-aos=\"fade-right\">\r\n                                <div className=\"section-title\">\r\n                                    <h2>Blood Request</h2>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-8\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                <form  role=\"form\"\r\n                                      className=\"php-email-form mt-4\">\r\n                                    <div className=\"form-row\">\r\n                                        <label htmlFor=\"staticBlood\" className=\"col-sm-2 col-form-label\">Blood Group</label>\r\n                                        <div className=\"col-md-6 form-group\">\r\n                                            <select className=\"form-control\" name=\"blood\"\r\n                                                    value = {this.state.blood}\r\n                                                    onChange={this.handleChange}\r\n                                                    valid={errors.blood === ''}\r\n                                                    invalid={errors.blood !== ''}\r\n                                                    onBlur={this.handleBlur('blood')}\r\n                                            >\r\n                                                <option>-----------  Select Blood Group -------------</option>\r\n                                                <option>A+</option>\r\n                                                <option>A-</option>\r\n                                                <option>B+</option>\r\n                                                <option>A-</option>\r\n                                                <option>O+</option>\r\n                                                <option>O-</option>\r\n                                                <option>AB+</option>\r\n                                                <option>AB-</option>\r\n                                            </select>\r\n                                            <p\r\n                                                style={{\r\n                                                    color:\"red\",\"padding-top\":\"10px\"\r\n                                                }}>\r\n                                                {errors.blood} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <label htmlFor=\"staticContact\" className=\"col-sm-2 col-form-label\">Contact No</label>\r\n                                        <div className=\"col-md-6 form-group\">\r\n                                            <input type=\"number\" name=\"contact\" className=\"form-control\" id=\"email\"\r\n                                                   placeholder=\"Contact No\"\r\n                                                   value = {this.state.contact}\r\n                                                   valid={errors.contact === ''}\r\n                                                   invalid={errors.contact !== ''}\r\n                                                   onBlur={this.handleBlur('contact')}\r\n                                                   onChange={this.handleChange}\r\n                                            />\r\n                                            <p\r\n                                                style={{\r\n                                                    color:\"red\",\"padding-top\":\"10px\"\r\n                                                }}>\r\n                                                {errors.contact} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <label htmlFor=\"staticContact\" className=\"col-sm-2 col-form-label\">Location</label>\r\n                                        <div className=\"col-md-6 form-group\">\r\n                                            <input type=\"text\" name=\"location\" className=\"form-control\" id=\"location\"\r\n                                                   placeholder=\"Location\"\r\n                                                   value = {this.state.location}\r\n                                                   valid={errors.location === ''}\r\n                                                   invalid={errors.location !== ''}\r\n                                                   onBlur={this.handleBlur('location')}\r\n                                                   onChange={this.handleChange}\r\n                                            />\r\n                                            <p\r\n                                                style={{\r\n                                                    color:\"red\",\"padding-top\":\"10px\"\r\n                                                }}>\r\n                                                {errors.location} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <label htmlFor=\"staticPatient\" className=\"col-sm-2 col-form-label\">Patient Description</label>\r\n                                        <div className=\"col-md-6 form-group\">\r\n                                            <textarea className=\"form-control\" name=\"patient\" rows=\"3\" data-rule=\"required\" data-msg=\"Please write something for us\" placeholder=\"Patient Description\"\r\n                                                      value = {this.state.patient}\r\n                                                      valid={errors.patient === ''}\r\n                                                      invalid={errors.patient !== ''}\r\n                                                      onBlur={this.handleBlur('patient')}\r\n                                                      onChange={this.handleChange}\r\n                                            ></textarea>\r\n                                            <p\r\n                                                style={{\r\n                                                    color:\"red\",\"padding-top\":\"10px\"\r\n                                                }}>\r\n                                                {errors.patient} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <label htmlFor=\"staticDiseases\" className=\"col-sm-2 col-form-label\">Diseases Description</label>\r\n                                        <div className=\"col-md-6 form-group\">\r\n                                            <textarea className=\"form-control\" name=\"diseases\" rows=\"3\" data-rule=\"required\" data-msg=\"Please write something for us\" placeholder=\"Diseases Description\"\r\n                                                      value = {this.state.diseases}\r\n                                                      valid={errors.diseases === ''}\r\n                                                      invalid={errors.diseases !== ''}\r\n                                                      onBlur={this.handleBlur('diseases')}\r\n                                                      onChange={this.handleChange}\r\n                                            ></textarea>\r\n                                            <p\r\n                                                style={{\r\n                                                    color:\"red\",\"padding-top\":\"10px\"\r\n                                                }}>\r\n                                                {errors.diseases} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    { errors.location || errors.blood || errors.contact ||\r\n                                    errors.patient || errors.diseases\r\n                                        ?\r\n                                        <div className=\"text-center\">\r\n                                            <button  className=\"btn\" style={{\"background-color\":\"#00805d\",\"color\":\"white\" , \"opacity\":\"60%\"}} disabled={true}>Submit</button>\r\n                                        </div>\r\n                                        :\r\n                                        <div className=\"text-center\">\r\n                                            <button onClick={this.handleSubmit} className=\"btn\" style={{\"background-color\":\"#00805d\",\"color\":\"white\"}} type=\"submit\">Submit</button>\r\n                                        </div>\r\n                                    }\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BloodRequest;","D:\\Study\\BloodBank_Management\\frontend\\src\\components\\pages\\Search.js",["135"],"D:\\Study\\BloodBank_Management\\frontend\\src\\components\\Main.js",[],{"ruleId":"136","severity":1,"message":"137","line":25,"column":53,"nodeType":"138","endLine":25,"endColumn":109},{"ruleId":"136","severity":1,"message":"137","line":36,"column":53,"nodeType":"138","endLine":36,"endColumn":109},{"ruleId":"136","severity":1,"message":"137","line":47,"column":53,"nodeType":"138","endLine":47,"endColumn":109},{"ruleId":"136","severity":1,"message":"137","line":58,"column":53,"nodeType":"138","endLine":58,"endColumn":109},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"136","severity":1,"message":"143","line":49,"column":27,"nodeType":"138","endLine":49,"endColumn":30},{"ruleId":"144","severity":1,"message":"145","line":56,"column":41,"nodeType":"146","messageId":"147","endLine":56,"endColumn":43},{"ruleId":"139","replacedBy":"148"},{"ruleId":"141","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":26,"column":62,"nodeType":"138","endLine":26,"endColumn":103},{"ruleId":"136","severity":1,"message":"137","line":32,"column":49,"nodeType":"138","endLine":32,"endColumn":105},{"ruleId":"136","severity":1,"message":"137","line":33,"column":49,"nodeType":"138","endLine":33,"endColumn":105},{"ruleId":"136","severity":1,"message":"137","line":34,"column":49,"nodeType":"138","endLine":34,"endColumn":104},{"ruleId":"136","severity":1,"message":"137","line":35,"column":49,"nodeType":"138","endLine":35,"endColumn":92},{"ruleId":"150","severity":1,"message":"151","line":42,"column":66,"nodeType":"138","endLine":42,"endColumn":107},{"ruleId":"136","severity":1,"message":"137","line":48,"column":53,"nodeType":"138","endLine":48,"endColumn":109},{"ruleId":"136","severity":1,"message":"137","line":49,"column":53,"nodeType":"138","endLine":49,"endColumn":109},{"ruleId":"136","severity":1,"message":"137","line":50,"column":53,"nodeType":"138","endLine":50,"endColumn":108},{"ruleId":"136","severity":1,"message":"137","line":51,"column":53,"nodeType":"138","endLine":51,"endColumn":96},{"ruleId":"152","severity":1,"message":"153","line":34,"column":16,"nodeType":"154","messageId":"155","endLine":34,"endColumn":20},{"ruleId":"152","severity":1,"message":"156","line":34,"column":21,"nodeType":"154","messageId":"155","endLine":34,"endColumn":26},{"ruleId":"152","severity":1,"message":"157","line":34,"column":27,"nodeType":"154","messageId":"155","endLine":34,"endColumn":34},{"ruleId":"152","severity":1,"message":"158","line":34,"column":35,"nodeType":"154","messageId":"155","endLine":34,"endColumn":40},{"ruleId":"152","severity":1,"message":"159","line":34,"column":41,"nodeType":"154","messageId":"155","endLine":34,"endColumn":47},{"ruleId":"152","severity":1,"message":"160","line":34,"column":48,"nodeType":"154","messageId":"155","endLine":34,"endColumn":55},{"ruleId":"152","severity":1,"message":"161","line":34,"column":56,"nodeType":"154","messageId":"155","endLine":34,"endColumn":64},{"ruleId":"152","severity":1,"message":"162","line":34,"column":65,"nodeType":"154","messageId":"155","endLine":34,"endColumn":74},{"ruleId":"163","severity":1,"message":"164","line":125,"column":37,"nodeType":"138","endLine":126,"endColumn":75},{"ruleId":"144","severity":1,"message":"145","line":26,"column":28,"nodeType":"146","messageId":"147","endLine":26,"endColumn":30},{"ruleId":"139","replacedBy":"165"},{"ruleId":"141","replacedBy":"166"},{"ruleId":"152","severity":1,"message":"167","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":13},{"ruleId":"152","severity":1,"message":"168","line":2,"column":61,"nodeType":"154","messageId":"155","endLine":2,"endColumn":68},{"ruleId":"152","severity":1,"message":"169","line":2,"column":70,"nodeType":"154","messageId":"155","endLine":2,"endColumn":79},{"ruleId":"136","severity":1,"message":"137","line":31,"column":33,"nodeType":"138","endLine":32,"endColumn":85},{"ruleId":"136","severity":1,"message":"137","line":46,"column":33,"nodeType":"138","endLine":47,"endColumn":91},{"ruleId":"136","severity":1,"message":"137","line":70,"column":37,"nodeType":"138","endLine":71,"endColumn":91},{"ruleId":"152","severity":1,"message":"156","line":22,"column":16,"nodeType":"154","messageId":"155","endLine":22,"endColumn":21},{"ruleId":"152","severity":1,"message":"161","line":22,"column":22,"nodeType":"154","messageId":"155","endLine":22,"endColumn":30},{"ruleId":"163","severity":1,"message":"164","line":89,"column":33,"nodeType":"138","endLine":90,"endColumn":71},{"ruleId":"170","severity":1,"message":"171","line":85,"column":29,"nodeType":"138","endLine":86,"endColumn":69},{"ruleId":"163","severity":1,"message":"164","line":109,"column":29,"nodeType":"138","endLine":109,"endColumn":80},{"ruleId":"163","severity":1,"message":"164","line":96,"column":33,"nodeType":"138","endLine":97,"endColumn":71},{"ruleId":"163","severity":1,"message":"164","line":104,"column":33,"nodeType":"138","endLine":105,"endColumn":96},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["172"],"no-negated-in-lhs",["173"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["172"],["173"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'email' is assigned a value but never used.","'contact' is assigned a value but never used.","'blood' is assigned a value but never used.","'weight' is assigned a value but never used.","'address' is assigned a value but never used.","'password' is assigned a value but never used.","'cpassword' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.",["172"],["173"],"'Nav' is defined but never used.","'NavItem' is defined but never used.","'Jumbotron' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]